{
  "version": 1,
  "id": "nayms-admin",
  "title": "Nayms Admin",
  "description": "The Nayms admin interface, for the overlords.",
  "aboutUrl": "https://github.com/nayms/contracts",
  "constants": {
    "aclAddress": {
      "default": ""
    },
    "entityDeployerAddress": {
      "default": ""
    }
  },
  "panels": [
    {
      "id": "isAdmin",
      "title": "ACL: Check if user is admin",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "ACL contract address",
          "description": "The address of the ACL contract",
          "type": "address",
          "initialValue": "@constant[aclAddress]",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        },
        {
          "name": "address",
          "title": "Address",
          "type": "address"
        }
      ],
      "execs": [
        {
          "type": "call",
          "contract": "ACL",
          "method": "isAdmin",
          "address": "@input[contractAddress]",
          "args": {
            "_addr": "@input[address]"
          },
          "saveResultAsInput": "isAdmin"
        }
      ],
      "outputs": [
        {
          "title": "Is admin",
          "type": "bool",
          "value": "@input[isAdmin]"
        }
      ]
    },
    {
      "id": "addAdmin",
      "title": "ACL: Add admin",
      "description": "You must be an admin to do this",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "ACL contract address",
          "initialValue": "@constant[aclAddress]",
          "type": "address",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        },
        {
          "name": "address",
          "title": "Address",
          "type": "address"
        }
      ],
      "execs": [
        {
          "type": "send",
          "contract": "ACL",
          "method": "addAdmin",
          "address": "@input[contractAddress]",
          "args": {
            "_addr": "@input[address]"
          }
        }
      ]
    },
    {
      "id": "getNumContexts",
      "title": "ACL: Get no. of contexts",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "ACL contract address",
          "type": "address",
          "initialValue": "@constant[aclAddress]",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        }
      ],
      "execs": [
        {
          "type": "call",
          "contract": "ACL",
          "method": "getNumContexts",
          "address": "@input[contractAddress]",
          "saveResultAsInput": "numContexts"
        }
      ],
      "outputs": [
        {
          "title": "No. of contexts",
          "type": "string",
          "value": "@input[numContexts]"
        }
      ]
    },
    {
      "id": "getContext",
      "title": "ACL: Get context",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "ACL contract address",
          "type": "address",
          "initialValue": "@constant[aclAddress]",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        },
        {
          "name": "index",
          "title": "Index",
          "type": "int",
          "validation": [
            {
              "type": "range",
              "min": "0"
            }
          ]
        }
      ],
      "execs": [
        {
          "type": "call",
          "contract": "ACL",
          "method": "getContextAtIndex",
          "address": "@input[contractAddress]",
          "args": {
            "_index": "@input[index]"
          },
          "saveResultAsInput": "context"
        }
      ],
      "outputs": [
        {
          "title": "Context",
          "type": "string",
          "value": "@input[context]"
        }
      ]
    },
    {
      "id": "genContext",
      "title": "ACL: Generate context for address",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "ACL contract address",
          "description": "The address of the ACL contract",
          "type": "address",
          "initialValue": "@constant[aclAddress]",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        },
        {
          "name": "address",
          "title": "Address",
          "type": "address"
        }
      ],
      "execs": [
        {
          "type": "call",
          "contract": "ACL",
          "method": "generateContextFromAddress",
          "address": "@input[contractAddress]",
          "args": {
            "_addr": "@input[address]"
          },
          "saveResultAsInput": "generatedContext"
        }
      ],
      "outputs": [
        {
          "title": "Generated context",
          "type": "string",
          "value": "@input[generatedContext]"
        }
      ]
    },
    {
      "id": "getContextForContract",
      "title": "Get contract's own context",
      "description": "This only works for contracts which talk to the ACL.",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "Contract address",
          "description": "The address of the contract",
          "type": "address",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        }
      ],
      "execs": [
        {
          "type": "call",
          "contract": "AccessControl",
          "method": "aclContext",
          "address": "@input[contractAddress]",
          "saveResultAsInput": "aclContext"
        }
      ],
      "outputs": [
        {
          "title": "Contract's own context",
          "type": "string",
          "value": "@input[aclContext]"
        }
      ]
    },
    {
      "id": "assignRole",
      "title": "ACL: Assign role",
      "description": "You must be an admin or an assigner for the role to do this",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "ACL contract address",
          "type": "address",
          "initialValue": "@constant[aclAddress]",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        },
        {
          "name": "context",
          "title": "Context",
          "type": "string",
          "validation": [
            {
              "type": "length",
              "min": "0"
            }
          ]
        },
        {
          "name": "address",
          "title": "Address",
          "type": "address"
        },
        {
          "name": "role",
          "title": "Role",
          "type": "bytes32"
        }
      ],
      "execs": [
        {
          "type": "send",
          "contract": "ACL",
          "method": "assignRole",
          "address": "@input[contractAddress]",
          "args": {
            "_context": "@input[context]",
            "_addr": "@input[address]",
            "_role": "@input[role]"
          }
        }
      ]
    },
    {
      "id": "unassignRole",
      "title": "ACL: Un-assign role",
      "description": "You must be an admin or an assigner for the role to do this",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "ACL contract address",
          "type": "address",
          "initialValue": "@constant[aclAddress]",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        },
        {
          "name": "context",
          "title": "Context",
          "type": "bytes32",
          "placeholder": "A bytes32 value",
          "validation": [
            {
              "type": "length",
              "min": "0"
            }
          ]
        },
        {
          "name": "address",
          "title": "Address",
          "type": "address"
        },
        {
          "name": "role",
          "title": "Role",
          "type": "bytes32"
        }
      ],
      "execs": [
        {
          "type": "send",
          "contract": "ACL",
          "method": "unassignRole",
          "address": "@input[contractAddress]",
          "args": {
            "_context": "@input[context]",
            "_addr": "@input[address]",
            "_role": "@input[role]"
          }
        }
      ]
    },
    {
      "id": "hasRole",
      "title": "ACL: Does user have role?",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "ACL contract address",
          "type": "address",
          "initialValue": "@constant[aclAddress]",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        },
        {
          "name": "context",
          "title": "Context",
          "type": "bytes32",
          "placeholder": "A bytes32 value",
          "validation": [
            {
              "type": "length",
              "min": "0"
            }
          ]
        },
        {
          "name": "address",
          "title": "Address",
          "type": "address"
        },
        {
          "name": "role",
          "title": "Role",
          "type": "bytes32"
        }
      ],
      "execs": [
        {
          "type": "call",
          "contract": "ACL",
          "method": "hasRole",
          "address": "@input[contractAddress]",
          "args": {
            "_context": "@input[context]",
            "_addr": "@input[address]",
            "_role": "@input[role]"
          },
          "saveResultAsInput": "has"
        }
      ],
      "outputs": [
        {
          "title": "Has role",
          "type": "bool",
          "value": "@input[has]"
        }
      ]
    },
    {
      "id": "deployEntity",
      "title": "EntityDeployer: Deploy entity",
      "description": "You must be an admin to do this",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "EntityDeployer contract address",
          "type": "address",
          "initialValue": "@constant[entityDeployerAddress]",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        }
      ],
      "execs": [
        {
          "type": "send",
          "contract": "EntityDeployer",
          "method": "deploy",
          "address": "@input[contractAddress]"
        }
      ]
    },
    {
      "id": "getEntityCount",
      "title": "EntityDeployer: Get no. of entities",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "EntityDeployer contract address",
          "type": "address",
          "initialValue": "@constant[entityDeployerAddress]",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        }
      ],
      "execs": [
        {
          "type": "call",
          "contract": "EntityDeployer",
          "method": "getNumEntities",
          "address": "@input[contractAddress]",
          "saveResultAsInput": "numEntities"
        }
      ],
      "outputs": [
        {
          "title": "No. of entities",
          "type": "int",
          "value": "@input[numEntities]"
        }
      ]
    },
    {
      "id": "getEntity",
      "title": "EntityDeployer: Get entity",
      "inputs": [
        {
          "name": "contractAddress",
          "title": "EntityDeployer contract address",
          "type": "address",
          "initialValue": "@constant[entityDeployerAddress]",
          "validation": [
            {
              "type": "allowedTypes",
              "contract": true
            }
          ]
        },
        {
          "name": "index",
          "title": "Index",
          "type": "int",
          "validation": [
            {
              "type": "range",
              "min": "0"
            }
          ]
        }
      ],
      "execs": [
        {
          "type": "call",
          "contract": "EntityDeployer",
          "method": "getEntity",
          "address": "@input[contractAddress]",
          "args": {
            "_index": "@input[index]"
          },
          "saveResultAsInput": "entityAddress"
        }
      ],
      "outputs": [
        {
          "title": "Entity",
          "type": "address",
          "value": "@input[entityAddress]"
        }
      ]
    }
  ]
}